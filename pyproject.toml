[build-system]
requires = ["setuptools>=60", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "linopy"
dynamic = ["version"]
description = "Linear optimization with N-D labeled arrays in Python"
readme = "README.md"
authors = [{ name = "Fabian Hofmann", email = "fabianmarikhofmann@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Typing :: Typed",
    "Operating System :: OS Independent",
]

requires-python = ">=3.9"
dependencies = [
    "numpy<2.0",
    "scipy",
    "bottleneck",
    "toolz",
    "numexpr",
    "xarray>=2024.2.0",
    "dask>=0.18.0",
    "polars",
    "tqdm",
    "deprecation",
]

[project.urls]
Homepage = "https://github.com/PyPSA/linopy"
Source = "https://github.com/PyPSA/linopy"

[project.optional-dependencies]
docs = [
    "ipython==8.26.0",
    "numpydoc==1.7.0",
    "sphinx==7.3.7",
    "sphinx_rtd_theme==2.0.0",
    "sphinx_book_theme==1.1.3",
    "nbsphinx==0.9.4",
    "nbsphinx-link==1.3.0",
    "gurobipy==11.0.2",
    "ipykernel==6.29.5",
    "matplotlib==3.9.1",
]
dev = [
    "pytest",
    "pytest-cov",
    'mypy',
    "pre-commit",
    "netcdf4",
    "paramiko",
    "types-paramiko",
    "gurobipy",
    "highspy",
]
solvers = [
    "gurobipy",
    "highspy>=1.5.0; python_version < '3.12'",
    "highspy>=1.7.1; python_version >= '3.12'",
    "cplex; platform_system != 'Darwin' and python_version < '3.12'",
    "mosek",
    "mindoptpy; python_version < '3.12'",
    "coptpy",
    "xpress; platform_system != 'Darwin' and python_version < '3.11'",
    "pyscipopt; platform_system != 'Darwin'",
]

[tool.setuptools.packages.find]
include = ["linopy"]

[tool.setuptools.package-data]
"linopy" = ["py.typed"]

[tool.setuptools_scm]
write_to = "linopy/version.py"
version_scheme = "no-guess-dev"

[tool.coverage.run]
branch = true
source = ["linopy"]
omit = ["test/*"]

[tool.mypy]
exclude = ['dev/*', 'examples/*', 'benchmark/*', 'doc/*']
ignore_missing_imports = true

[tool.ruff]
extend-include = ['*.ipynb']

[tool.ruff.lint]
select = [
    'F',   # pyflakes
    'E',   # pycodestyle: Error
    'W',   # pycodestyle: Warning
    'I',   # isort
    'D',   # pydocstyle
    'UP',  # pyupgrade
    'TID', # flake8-tidy-imports
    'NPY', # numpy
]

ignore = [
    'E501', # line too long
    'E741', # ambiguous variable names
    'D105', # Missing docstring in magic method
    'D212', # Multi-line docstring summary should start at the second line
    'D200', # One-line docstring should fit on one line with quotes
    'D401', # First line should be in imperative mood
    'D404', # First word of the docstring should not be "This
    'D413', # Missing blank line after last section

    # pydocstyle ignores, which could be enabled in future when existing
    # issues are fixed
    'D100', # Missing docstring in public module
    'D101', # Missing docstring in public class
    'D102', # Missing docstring in public method
    'D103', # Missing docstring in public function
    'D107', # Missing docstring in __init__
    'D202', # No blank lines allowed after function docstring
    'D203', # 1 blank line required before class docstring
    'D205', # 1 blank line required between summary line and description
    'D400', # First line should end with a period
    'D415', # First line should end with a period, question mark, or exclamation point
    'D417', # Missing argument descriptions in the docstring

]

[tool.ruff.lint.per-file-ignores]
"benchmark/notebooks/**.ipynb" = [
    "F821", # undefined-name - e.g. "snakemake is undefined"
]
"benchmark/scripts/**.py" = [
    "F821", # undefined-name - e.g. "snakemake is undefined"
]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
